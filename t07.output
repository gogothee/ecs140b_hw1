++++ running Little Lisp
Welcome to Little Lisp.
> (append)
()
> (append ())
()
> (append () ())
[(), ()]
#class Interpreter$ListTreeNode
#class Interpreter$ListTreeNode
()
> (append () (quote (34 56 7)) ())
[(), (34 56 7), ()]
#class Interpreter$ListTreeNode
#class Interpreter$ExprTreeNode
#class Interpreter$ListTreeNode
()
> (quote (34 56 7))
(34 56 7)
> (append (quote (a)))
()
> (quote (a))
(a)
> (append (quote (a)) (quote (b)))
[(a), (b)]
#class Interpreter$ExprTreeNode
#class Interpreter$ExprTreeNode
()
> (append (quote (a e)) (quote (b f)) (quote (c g)))
[(a e), (b f), (c g)]
#class Interpreter$ExprTreeNode
#class Interpreter$ExprTreeNode
#class Interpreter$ExprTreeNode
()
> (quote (a e))
(a e)
> (quote (b f))
(b f)
> (quote (c g))
(c g)
> (append 5 (quote (c)) (quote (b)) (quote 4))
append given non-list
()
> (append ' (3) 4)
"'" is not bound as a parameter
can't use number as function name
[(), (), 4]
#class Interpreter$ListTreeNode
#class Interpreter$ListTreeNode
#class Interpreter$NumberTreeNode
()
> (append ' (3) foo ' (4))
"'" is not bound as a parameter
can't use number as function name
"foo" is not bound as a parameter
"'" is not bound as a parameter
can't use number as function name
[(), (), (), (), ()]
#class Interpreter$ListTreeNode
#class Interpreter$ListTreeNode
#class Interpreter$ListTreeNode
#class Interpreter$ListTreeNode
#class Interpreter$ListTreeNode
()
> 
Bye.
++++ done running Little Lisp
